#!/usr/bin/env python3

import sys
import argparse


def encode_address(address, reverse):
    parts = list()

    while address > 0:
        parts.append(address % 0x100)
        address = int(address / 0x100)

    for i in range(len(parts), 8):
        parts.append(0)

    if reverse:
        parts.reverse()

    return bytes(parts)


def entry():
    parser = argparse.ArgumentParser()
    parser.add_argument('--pad', type=lambda s: int(s, 16), default=0x80)
    parser.add_argument('--padding', type=int, default=0)
    parser.add_argument('--reverse', default=False, action='store_const', const=True)
    parser.add_argument('address', type=lambda s: int(s, 16))
    parser.add_argument('--length-prefix', default=False, action='store_const', const=True)

    ns = parser.parse_args()

    parts = list()

    for _ in range(ns.padding):
        parts.append(ns.pad)

    parts.extend(encode_address(ns.address, ns.reverse))

    if ns.length_prefix is not None:
        parts.insert(0, len(parts))

    sys.stdout.buffer.write(bytes(parts))


if __name__ == "__main__":
    entry()
